<html>
    <head>
        <link rel="stylesheet" href=".\sample.css">
    </head>
    <body>
        <div id="chartContainer" class="item-container">
            <div class="item-header">Preview highcharts</div>
            <div id="chartData"></div>
        </div>

        <div id="svgContainer" class="item-container">
            <div class="item-header">Preview svg</div>
            <img id="svgImage" src="sample.svg" alt=""/>
        </div>

        <script>
            // json as stored in a file
            var chartJson = { "title": { "text": "Andel nye utlån med avvik fra krav i boliglånsforskriften", "align": "left", "style": { "fontSize": "20px" }, "itemStyle": { "fontWeight": "normal" } }, "subtitle": { "text": "", "align": "left", "style": { "color": "#000000", "fontSize": "20px" } }, "plotOptions": { "series": { "allowPointSelect": true, "marker": { "enabled": false, "radius": 0 } }, "line": { "marker": { "enabled": false }, "lineWidth": 4 }, "pie": { "borderWidth": 5 } }, "exporting": { "enabled": false, "menuItemDefinitions": { "downloadXLSX": { "onclick": "function(){var e=this.options.data.csv.split(\"\\n\"),t=[],i=e[0].split(\";\");for(let n=1;n<e.length;n++){if(!e[n])continue;const o={},s=e[n].split(\";\");for(let e=0;e<i.length;e++)o[i[e]]=s[e],o[i[e]]=o[i[e]].replace(/&quot;/g,/^$/);t.push(o)}var n=XLSX.utils.book_new();n.SheetNames.push(this.options.title.text);var o=XLSX.utils.json_to_sheet(t);n.Sheets[this.options.title.text]=o;var s=XLSX.write(n,{bookType:\"xlsx\",type:\"binary\"});var a=new Blob([function(e){for(var t=new ArrayBuffer(e.length),i=new Uint8Array(t),n=0;n<e.length;n++)i[n]=255&e.charCodeAt(n);return t}(s)],{type:\"application/octet-stream\"});let r=URL.createObjectURL(a),l=document.createElement(\"a\");l.href=r,l.target=\"_blank\",l.download=this.options.title.text+\"-data.xlsx\",l.click()}", "text": "Download data as Excel" }, "downloadCSV": { "onclick": "function(){var e=this.options.data.csv.split(\"\\n\"),t=[],i=e[0].split(\";\");for(let n=1;n<e.length;n++){if(!e[n])continue;const o={},s=e[n].split(\";\");for(let e=0;e<i.length;e++)o[i[e]]=s[e],o[i[e]]=o[i[e]].replace(/&quot;/g,/^$/);t.push(o)}var n=Object.keys(t[0]),o=t.map((function(e){return n.map((function(t){return e[t]})).join(\",\")}));o.unshift(n.join(\",\")),o=o.join(\"\\r\\n\");let s=new Blob([\"\\ufeff\",o],{type:\"text/csv\"}),a=URL.createObjectURL(s),r=document.createElement(\"a\");r.href=a,r.target=\"_blank\",r.download=this.options.title.text+\"-data.csv\",r.click()}", "text": "Download data as CSV" }, "viewDataTable": { "onclick": "function(){if(document.getElementById(\"::dataTable\")){var t=document.getElementById(\"::dataTable\");t.parentNode.removeChild(t)}else{var i=this.options.data.csv.split(\"\\n\"),n=[],o=i[0].split(\";\");for(let e=1;e<i.length;e++){if(!i[e])continue;const t={},s=i[e].split(\";\");for(let e=0;e<o.length;e++)t[o[e]]=s[e];n.push(t)}var s=[];for(let e=0;e<n.length;e++)for(let t in n[e])-1===s.indexOf(t)&&s.push(t);var a=document.createElement(\"table\");a.id=\"::dataTable\";var r=a.insertRow(-1);for(let e=0;e<s.length;e++){var l=document.createElement(\"th\");l.innerHTML=s[e].replace(/\"/g,\"\"),l.setAttribute(\"style\",\"border: 1px solid black;\"),r.appendChild(l)}for(let e=0;e<n.length;e++){r=a.insertRow(-1);for(let t=0;t<s.length;t++){var d=r.insertCell(-1);d.setAttribute(\"style\",\"border: 0.5px solid black; margin: 0;\"),d.innerHTML=n[e][s[t]].replace(/\"/g,\"\")}}a.setAttribute(\"style\",\"border: 1px solid black;\"),e.appendChild(a)}}", "text": "View data table" } }, "buttons": { "contextButton": { "menuItems": ["printChart", "separator", "downloadPNG", "downloadJPEG", "downloadPDF", "downloadSVG", "separator", "downloadXLSX", "downloadCSV", "viewDataTable"] } } }, "lang": { "numericSymbols": null }, "chart": { "type": "line", "style": { "fontFamily": "Open Sans, sans-serif", "color": "#000000" }, "backgroundColor": "#ffffff", "plotBackgroundColor": "#ffffff" }, "legend": { "align": "center", "symbolRadius": 0, "itemStyle": { "fontWeight": "normal", "fontSize": "16px" }, "style": { "color": "#000000", "fontSize": "16px" } }, "caption": { "style": { "fontSize": "16px" } }, "xAxis": { "minorTickLength": 0, "tickLength": 0, "tickWidth": 0.25, "lineColor": "#000000", "gridLineWidth": 0, "minorGridLineWidth": 0, "labels": { "style": { "color": "#000000", "fontSize": "16px" } }, "lineWidth": 0.25, "plotLines": [{ "width": 0.25 }] }, "yAxis": [{ "id": "0", "title": { "text": "" }, "tickWidth": 0.25, "tickLength": 10, "tickPosition": "inside", "tickColor": "#000000", "gridLineColor": "transparent", "gridLineWidth": 0, "minorGridLineWidth": 0, "lineColor": "#000000", "labels": { "style": { "color": "#000000", "fontSize": "16px" }, "format": "{value:.0f}%" }, "lineWidth": 0.25, "plotLines": [{ "color": "#000000", "width": 0.25, "value": 0 }], "index": 0 }, { "id": "1", "title": { "text": "" }, "tickWidth": 0.25, "tickLength": 10, "tickColor": "#000000", "gridLineColor": "transparent", "gridLineWidth": 0, "minorGridLineWidth": 0, "tickPosition": "inside", "linkedTo": 0, "lineColor": "#000000", "opposite": true, "labels": { "style": { "color": "#000000", "fontSize": "16px" }, "format": "{value:.0f}%" }, "lineWidth": 0.25, "plotLines": [{ "color": "#000000", "width": 0.25, "value": 0 }], "index": 1 }], "credits": { "enabled": false }, "colors": ["#4156A6", "#F15D61", "#969497", "#5B91CC", "#97499C", "#181C62", "#008286", "#C09AC8", "#60C3AD", "#B1DED3", "#C8D5ED", "#FBCEC7", "#FFDF4F", "#0a0a0a"], "series": [{ "name": "Hele landet", "turboThreshold": 0, "label": { "enabled": false }, "type": "line", "lineWidth": 4 }, { "name": "Oslo", "turboThreshold": 0, "label": { "enabled": false }, "type": "line" }, { "name": "Utenfor Oslo", "turboThreshold": 0, "label": { "enabled": false }, "color": "#5b91cc", "stacking": "undefined", "type": "line" }], "data": { "csv": "\"null\";\"Hele landet\";\"Oslo\";\"Utenfor Oslo\"\n\"3. kv. 2015\";\"10,30\";;\n\"4. kv. 2015\";\"7,30\";;\n\"1. kv. 2016\";\"6,10\";;\n\"2. kv. 2016\";\"6,70\";;\n\"3. kv. 2016\";\"6,60\";;\n\"4. kv. 2016\";\"5,70\";;\n\"1. kv. 2017\";;\"6,90\";\"6,10\"\n\"2. kv. 2017\";;\"5,80\";\"5,60\"\n\"3. kv. 2017\";;\"5,70\";\"5,50\"\n\"4. kv. 2017\";;\"5,30\";\"6,00\"\n\"1. kv. 2018\";;\"5,60\";\"5,90\"\n\"2. kv. 2018\";;\"5,90\";\"5,80\"\n\"3. kv. 2018\";;\"6,60\";\"6,10\"\n\"4. kv. 2018\";;\"6,20\";\"7,00\"\n\"1. kv. 2019\";;\"6,30\";\"6,30\"\n\"2. kv. 2019\";;\"6,40\";\"6,70\"\n\"3. kv. 2019\";;\"6,30\";\"7,10\"\n\"4. kv. 2019\";;\"6,40\";\"7,20\"\n\"1. kv. 2020\";;\"5,90\";\"7,10\"\n\"2. kv. 2020\";;\"8,60\";\"8,20\"\n\"3. kv. 2020\";;\"11,50\";\"8,60\"\n\"4. kv. 2020\";;\"6,50\";\"7,10\"", "googleSpreadsheetKey": false, "googleSpreadsheetWorksheet": false, "seriesMapping": [{ "x": 0, "y": 1 }, { "x": 0, "y": 2 }, { "x": 0, "y": 3 }] }, "stockTools": { "gui": { "buttons": ["simpleShapes", "lines", "crookedLines"], "enabled": false } }, "navigation": { "events": {}, "bindingsClassName": "tools-container" }, "labels": { "items": [] }, "pane": { "background": [] }, "annotations": [] };

            // same set options as on regjeringen.no
            var setOptions = {
                lang: {
                    numericSymbols: null,
                    decimalPoint: ",",
                    thousandsSep: '\u0020',
                    months: ['januar', 'februar', 'mars', 'april', 'mai', 'juni', 'juli', 'august', 'september', 'oktober', 'november', 'desember'],
                    shortMonths: ['jan', 'feb', 'mar', 'apr', 'mai', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'des'],
                    weekdays: ['søndag', 'mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag'],
                    shortWeekdays: ['søn', 'man', 'tir', 'ons', 'tor', 'fre', 'lør'],
                },
                xAxis: {
                    dateTimeLabelFormats: {
                        day: '%e. %b',
                        week: '%e. %b',
                        month: '%b %y',
                        year: '%Y'
                    }
                }
            };

            // set options and load highcharts
            document.addEventListener('DOMContentLoaded',
                function () {
                    Highcharts.setOptions(setOptions);
                    Highcharts.chart('chartData', chartJson);
                });
        </script>
        <script src="https://code.highcharts.com/stock/highstock.js"></script>
        <script src="https://code.highcharts.com/stock/highcharts-more.js"></script>
        <script src="https://code.highcharts.com/modules/data.js"></script>
        <script src="https://code.highcharts.com/modules/exporting.js"></script>
        <script src="https://code.highcharts.com/modules/export-data.js"></script>
        <script src="https://code.highcharts.com/modules/funnel.js"></script>
        <script src="https://code.highcharts.com/modules/solid-gauge.js"></script>
        <script src="https://code.highcharts.com/modules/series-label.js"></script>
        <script src="https://code.highcharts.com/modules/accessibility.js"></script>
        <script src="https://code.highcharts.com/modules/annotations.js"></script>
        <script src="https://code.highcharts.com/modules/annotations-advanced.js"></script>
    </body>
</html>